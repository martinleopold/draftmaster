'''
lemon (from svg line segments)
'''

d = 'M172.782,210.169L181.795,193.181L187.656,185.026L194.401,175.596L200.41,167.734L207.36,160.723L215.519,153.433L224.194,146.311L232.076,140.701L241.313,136.133L249.879,131.028L258.989,126.676L268.293,123.256L280.01,119.982L293.366,116.899L303.88,115.377L314.477,114.273L326.429,113.446L336.822,113.178L348.751,113.164L359.637,114.477L370.478,115.731L380.195,117.414L390.867,119.759L401.194,123.404L410.754,126.522L421.024,130.724L430.412,134.819L439.042,140.223L447.456,145.246L455.681,151.114L464.478,158.597L470.667,165.797L478.17,173.013L483.246,180.314L487.796,188.806L491.478,197.574L493.312,204.858L494.219,212.901L499.638,220.553L504.381,228.335L507.76,235.968L510.435,243.404L510.974,250.605L510.488,257.816L508.143,264.978L504.588,270.537L500.322,275.633L494.705,279.338L488.021,283.185L483.663,288.681L478.385,294.722L473.198,300.932L467.309,307.61L460.338,314.563L454.159,320.074L445.08,326.854L437.151,332.423L428.711,337.505L419.014,342.014L409.471,346.084L401.651,349.184L392.029,352.858L381.11,355.837L370.455,357.44L359.136,359.52L347.731,360.952L335.235,360.919L322.597,360.272L310.604,359.328L299.806,357.668L288.885,355.405L276.403,352.124L265.437,348.768L253.916,344.312L243.65,339.681L233.079,334.395L222.986,327.432L212.908,319.647L204.494,313.065L196.369,304.222L187.464,293.92L180.289,283.424L176.118,274.407L172.754,265.511L170.359,257.874L165.242,253.269L160.469,247.334L157.72,239.032L159.152,229.705L162.924,221.305L168.244,214.951L172.782,210.169'

dx, dy = -157.72, -113.164
dx -= 353.3/2
dy -= 247.8/2
# print(dx, dy)
# dx, dy = 0, 0
s = 10
import re

d = re.sub(r'[ML]', ' ', d).strip()
d = d.split(' ')
d = list( map(lambda x: tuple(map(float, x.split(','))), d) )
# print(d)
# print(dx, dy)

def offset(p, offset = (dx, dy)):
    return f'{((p[0] + dx) * s):.0f}', f'{((p[1] + dy) * s):.0f}'
    # return int((p[0] + dx) * s), int((p[1] + dy) * s)

from draftmaster import *
import draftmaster as dm
dm._debug = True
# dm._dry = True

open('/dev/tty.usbserial-A700CYY0')

IN()

## draw lines
# SP(1)
# PA( *offset(d[0]) )
# for p in d[1:]: 
#     PD( *offset(p) )
# SP(0)

# fill polygon
SP(2)
PA( *offset(d[0]) )
PM()
for p in d[1:]:
    PD( *offset(p) )
PM(2)
FP()
SP(0)

# edge polygon
# SP(2)
# PA( *offset(d[0]) )
# PM()
# for p in d[1:]:
#     PD( *offset(p) )
# PM(2)
# FP()
# SP(0)

close()